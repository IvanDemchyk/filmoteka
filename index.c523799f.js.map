{"mappings":"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","sources":["src/js/genresConvertor.js","src/js/get-genres.js","src/js/createMovieCard.js","src/js/fetchTrends.js","src/js/searchRequest.js","src/js/render.js","src/js/paginFunction.js","src/js/loader.js","src/js/modal-window.js","src/js/get-films.js","src/js/pagination.js"],"sourcesContent":["// ---- Genres converting function - замінює id жанрів в картці фільму на назви жанрів\nimport { GENRES_MOVIES } from './get-genres'\nexport function genresConvertor(genre_ids) {\n  const result = genre_ids.map(id => {\n    const objectNumbersInString = JSON.parse(localStorage.getItem(GENRES_MOVIES));\n    return objectNumbersInString[id];\n  });\n  if (result.length > 2) {\n    result.splice(2, result.length - 2);\n    result.push(\"other\")\n  }\n  return result\n}\n","export const GENRES_MOVIES = 'genresList';\nconst fetchedGenres = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=e8369cced440ebe3b010b622661df24b&language=en-US`\n  ).then(data => data.json());\n};\n\nfetchedGenres().then(onFetchSuccess);\n\nfunction onFetchSuccess(respond) {\n  const genresList = respond.genres.reduce((acc, { id, name }) => {\n    acc[id] = name;\n    return acc;\n  }, {});\n  localStorage.setItem(GENRES_MOVIES, JSON.stringify(genresList));\n}\n","import { genresConvertor } from \"./genresConvertor\";\nexport function createMovieCard(data) {\n  const markup = data\n    .map(\n      ({\n        poster_path,\n        original_title,\n        title,\n        genre_ids,\n        overview,\n        release_date,\n        id,\n      }) => {\n        return `<li class=\"card__item list\" id=\"${id}\">\n            <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <h2 class=\"card__title\">${title ?? original_title}</h2>\n            <p class=\"card__desc\">${genresConvertor(genre_ids).join(\n              ', '\n            )} | ${release_date.substr(0, 4)}\n            </p>\n            </li>`;\n      }\n    )\n    .join('');\n  return markup;\n}\n","\nimport axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\n// let page = 1;\nexport async function fetchTrends(page, request) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${KEY_API}&page=${page}`\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(response.statusText);\n  }\n}\n","import { fetchMovies } from './fetchMovie';\nimport { render } from './render';\nimport { pagination } from './paginFunction';\nimport { loaderOn } from './loader';\nimport { loaderOff } from './loader';\nconst form = document.querySelector('.form-js');\nconst inputEl = document.querySelector('.form-input');\nconst notif = document.querySelector('.form__notification');\nexport let globalRequest;\nexport let currPageGlobe;\nlet page = 1;\nasync function inputRequest(e) {\n  e.preventDefault();\n   let request = inputEl.value.trim();\n  if (!request) {\n    return;\n  }\n  try {\n    const data = await fetchMovies(page, request);\n    // console.log('hello try');\n    if (data.results.length === 0) {\n      notif.style.visibility = 'visible';\n      setTimeout(() => {\n        notif.style.visibility = 'hidden';\n      }, 5000);\n      return;\n    }\n    currPageGlobe = data.page;\n    loaderOn();\n    render(data);\n    window.onload = loaderOff();\n    globalRequest = request;\n    pagination(data.page, data.total_pages);\n  } catch (err) {\n    console.log('Error');\n    errorMsg;\n  }\n}\nconst errorMsg = err => Notify.failure(`${err}`);\nform.addEventListener('submit', inputRequest);\n","import { card } from './local';\nimport { createMovieCard } from './createMovieCard';\nimport { CURRENT_MOVIES, WATCHE, QUEUE, watche, queue } from './local';\n\nexport function render(data) {\n  localStorage.setItem(CURRENT_MOVIES, JSON.stringify(data));\n  card.innerHTML = createMovieCard(\n    JSON.parse(localStorage.getItem(CURRENT_MOVIES)).results\n  );\n}\n","\nexport let currPageGlobe;\nconst paginationBoxElem = document.querySelector('.js-pagination');\n\nexport function pagination(currPage, allPages) {\n  let markupControls = '';\n  let beforeTwoPages = currPage - 2;\n  let beforeOnePage = currPage - 1;\n  let afterOnePage = currPage + 1;\n  let afterTwoPage = currPage + 2;\n  currPageGlobe = currPage;\n\n  if (currPage > 1) {\n    markupControls += `<li class=' arrows'>&#129144;</li>`;\n    markupControls += `<li class=\"firstInt\">1</li>`;\n  }\n\n  if (currPage > 4) {\n    markupControls += `<li class=\"dots\">...</li>`;\n  }\n\n  if (currPage > 3) {\n    markupControls += `<li class=\"two-left\">${beforeTwoPages}</li>`;\n  }\n\n  if (currPage > 2) {\n    markupControls += `<li>${beforeOnePage}</li>`;\n  }\n\n  markupControls += `<li class='active'>${currPage}</li>`;\n\n  if (allPages - 1 > currPage) {\n    markupControls += `<li >${afterOnePage}</li>`;\n  }\n\n  if (allPages - 2 > currPage) {\n    markupControls += `<li >${afterTwoPage}</li>`;\n  }\n\n  if (allPages - 3 > currPage) {\n    markupControls += `<li class=\"dots\">...</li>`;\n  }\n\n  if (allPages > currPage) {\n    markupControls += `<li class=\"lastInt\">${allPages}</li>`;\n    markupControls += `<li class=' arrows'>&#129146</li>`;\n  }\n\n  paginationBoxElem.innerHTML = markupControls;\n}","export let preloader = document.querySelector('.preloader');\n\nexport function loaderOn() {\n  preloader.style.display = 'flex';\n}\nexport function loaderOff() {\n  setTimeout(() => {\n    preloader.style.display = 'none';\n  }, 500);\n}\n","import { CURRENT_MOVIES, watche, queue, WATCHE, QUEUE } from './local.js';\nimport { GENRES_MOVIES } from './get-genres';\n\nconst backdrop = document.querySelector('.backdrop');\nconst modalWindow = document.querySelector('.modal-window');\nconst watchedBtn = document.querySelector('.watched-btn-js');\nconst queueBtn = document.querySelector('.queue-btn-js');\n// відкриття модального вікна з інфо про фільм\nfunction showMovieMain(e) {\n  const film = getFilmMain(e, '.card__item', CURRENT_MOVIES);\n\n  const checkWatched = checkLibrary(watche, film);\n  const checkQueue = checkLibrary(queue, film);\n\n  createMovieInfo(film, GENRES_MOVIES, checkWatched, checkQueue);\n  eventListeners(closeModal, addFilm);\n  backdrop.hidden = false;\n}\n\nfunction showMovieLibrary(e) {\n  const library = watchedOrQueue();\n  const film = getFilmLibrary(e, '.card__item', library);\n\n  const checkWatched = checkLibrary(watche, film);\n  const checkQueue = checkLibrary(queue, film);\n\n  createMovieInfo(film, GENRES_MOVIES, checkWatched, checkQueue);\n  eventListeners(closeModal, addFilm);\n\n  backdrop.hidden = false;\n}\n\nfunction getFilmMain(e, element, fromStoarage) {\n  const movieId = Number(e.target.closest(element).id);\n  return JSON.parse(localStorage.getItem(fromStoarage)).results.find(\n    movie => movie.id === movieId\n  );\n}\n\nfunction getFilmLibrary(e, element, fromStoarage) {\n  const movieId = Number(e.target.closest(element).id);\n  return JSON.parse(localStorage.getItem(fromStoarage)).find(\n    movie => movie.id === movieId\n  );\n}\n\n// розмітка з інфо про фільм у модальному вікні\nfunction createMovieInfo(movie, genresList, checkWatched, checkQueue) {\n  const modalMovieMarkup = `<button class=\"modal-window__close-btn\">close</button>\n\n    <div class=\"modal__movie\" id='${\n      movie.id\n    }'><img class='movie__img' alt=\"movie poster\" src=\"https://image.tmdb.org/t/p/w500/${\n    movie.poster_path\n  }\"/>\n      <div class=\"movie__info\">\n      <h2 class=\"movie__title\">${movie.title}</h2>\n      <table class=\"movie__details\">\n      <tbody>\n      <tr>\n      <td class='movie__detail modal-text--left-column modal-text'>Vote/Votes</td>\n      <td class=\"movie__detail modal-text modal-text--line-high\">\n      <span class=\"movie__detail--accent\">\n      ${movie.vote_average.toFixed(1)} </span\n      >/ ${movie.vote_count}\n      </td>\n      </tr>\n      <tr>\n      <td class=\"movie__detail modal-text--left-column modal-text\">Popularity</td>\n      <td class=\"movie__detail modal-text modal-text--line-high\">${movie.popularity.toFixed(\n        1\n      )}</td>\n      </tr>\n      <tr>\n      <td class=\"movie__detail modal-text--left-column modal-text\">Original title</td>\n      <td class=\"movie__detail modal-text modal-text--uppercase\">${\n        movie.original_title\n      }</td>\n      </tr>\n      <tr>\n      <td class=\"movie__detail modal-text--left-column modal-text\">Genres</td>\n      <td class=\"movie__detail modal-text\">${genresConvertor(\n        movie.genre_ids,\n        genresList\n      )}</td>\n      </tr>\n          </tbody>\n          </table>\n          \n          <h3 class=\"movie__about modal-text modal-text--uppercase\">About</h3>\n      <p class=\"movie__description modal-text\">${movie.overview}</p>\n      <div class=\"movie__add-buttons\">\n        <button class=\"movie__add-btn modal-text modal-text--uppercase js-movie__add-btn--watched\">${\n          checkWatched ? 'remove from ' : 'add to '\n        }watched</button>\n        <button class=\"movie__add-btn modal-text modal-text--uppercase js-movie__add-btn--queue\">${\n          checkQueue ? 'remove from ' : 'add to '\n        }queue</button>\n      </div><button data-movie-id='${movie.id}'>Trailer</button>\n      </div></div>\n  `;\n  modalWindow.innerHTML = modalMovieMarkup;\n}\n\n// функції для закриття модального вікна\nconst closeModal = {\n  onBackdropClick(e) {\n    if (e.target.parentElement.nodeName === 'BODY') {\n      backdrop.hidden = true;\n      backdrop.removeEventListener('click', this.onBackdropClick);\n    }\n  },\n\n  onEsc(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n    backdrop.hidden = true;\n    document.removeEventListener('keydown', this.onEsc);\n  },\n\n  onCloseBtn() {\n    backdrop.hidden = true;\n  },\n};\n\n// функції додавання фільмів у список переглянутих та у чергу\nconst addFilm = {\n  toWatched(e) {\n    if (e.currentTarget.textContent === 'add to watched') {\n      addToWatchedOrQueue(\n        e,\n        '.modal__movie',\n        CURRENT_MOVIES,\n        watche,\n        WATCHE,\n        'watched'\n      );\n    } else {\n      removeFromWatchedOrQueue(e, '.modal__movie', watche, WATCHE, 'watched');\n    }\n  },\n\n  toQueue(e) {\n    if (e.currentTarget.textContent === 'add to queue') {\n      addToWatchedOrQueue(\n        e,\n        '.modal__movie',\n        CURRENT_MOVIES,\n        queue,\n        QUEUE,\n        'queue'\n      );\n    } else {\n      removeFromWatchedOrQueue(e, '.modal__movie', queue, QUEUE, 'queue');\n    }\n  },\n};\n\nfunction addToWatchedOrQueue(e, element, fromStoarage, local, key, btn) {\n  const film = getFilmMain(e, element, fromStoarage);\n  local.push(film);\n  localStorage.setItem(key, JSON.stringify(local));\n  e.currentTarget.textContent = `remove from ${btn}`;\n}\n\nfunction removeFromWatchedOrQueue(e, element, local, key, btn) {\n  const films = JSON.parse(localStorage.getItem(key));\n  const movieId = Number(e.target.closest(element).id);\n  films.forEach((film, i) => {\n    film.id === movieId ? local.splice(i, 1) : film;\n  });\n  localStorage.setItem(key, JSON.stringify(local));\n  e.currentTarget.textContent = `add to ${btn}`;\n}\n\n// додає та видаляє слухачі подій\nfunction eventListeners(closeModal, addFilm) {\n  const modalCloseBtn = document.querySelector('.modal-window__close-btn');\n  const modalBtns = {\n    addToWatched: document.querySelector('.js-movie__add-btn--watched'),\n    addToQueue: document.querySelector('.js-movie__add-btn--queue'),\n  };\n\n  modalBtns.addToWatched.addEventListener('click', addFilm.toWatched);\n  modalBtns.addToQueue.addEventListener('click', addFilm.toQueue);\n  modalCloseBtn.addEventListener('click', closeModal.onCloseBtn);\n  backdrop.addEventListener('click', closeModal.onBackdropClick);\n  document.addEventListener('keydown', closeModal.onEsc);\n}\n\nfunction genresConvertor(movieGenres, genresList) {\n  return movieGenres\n    .map(genre => {\n      const allGenres = JSON.parse(localStorage.getItem(genresList));\n      return allGenres[genre];\n    })\n    .join(', ');\n}\n\nfunction checkLibrary(local, film) {\n  if (local.length === 0) {\n    return;\n  }\n\n  return local.find(movie => movie.id === film.id);\n}\n\nfunction watchedOrQueue() {\n  if (watchedBtn.classList.contains('active')) {\n    return WATCHE;\n  } else {\n    return QUEUE;\n  }\n}\nexport { showMovieMain, showMovieLibrary };\n","// console.log('get-films');\nimport { createMovieCard } from './createMovieCard.js';\nimport { getfetchTrends } from './fetchTrends.js';\nimport { CURRENT_MOVIES, WATCHE, QUEUE, watche, queue } from './local.js';\nimport { card } from './local';\nimport { globalRequest } from './searchRequest';\nimport { showMovieMain } from './modal-window.js';\n//Додаю сюди для перевірки функціоналу, поки без підключення\n//Модальне вікно\ncard.addEventListener('click', showMovieMain);\n","const API_KEY = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nimport { render } from './render.js';\nimport { fetchMovies } from './fetchMovie';\nimport { fetchTrends } from './fetchTrends.js';\nimport { globalRequest } from './searchRequest';\n// import { currPageGlobe } from './searchRequest';\nimport { pagination } from './paginFunction.js';\nimport { loaderOn } from './loader';\nimport { loaderOff } from './loader';\nexport const paginationBoxElem = document.querySelector('.js-pagination');\n// let page = 1;\nlet currPageGlobe;\n\nasync function getMovies(page = 1) {\n  console.log(globalRequest);\n  let resp;\n  if (globalRequest) {\n    resp = await fetchMovies(page, globalRequest);\n    currPageGlobe = resp.page;\n    return resp;\n  } else {\n    loaderOn();\n    resp = await fetchTrends(page);\n    window.onload = loaderOff();\n    currPageGlobe = resp.page;\n    return resp;\n  }\n}\n\ngetMovies().then(data => {\n  loaderOn();\n  render(data);\n  currPageGlobe = data.page;\n  window.onload = loaderOff();\n  pagination(data.page, data.total_pages);\n});\n\n\npaginationBoxElem.addEventListener('click', paginationHandler);\n\nfunction paginationHandler(evt) {\n  if (evt.target.nodeName !== 'LI') {\n    return;\n  }\n\n  if (evt.target.textContent === '...') {\n    return;\n  }\n\n  if (evt.target.textContent === '🡸') {\n    getMovies((currPageGlobe -= 1)).then(data => {\n      render(data);\n      pagination(data.page, data.total_pages);\n    });\n  } else if (evt.target.textContent === '🡺') {\n    getMovies((currPageGlobe += 1)).then(data => {\n      render(data);\n      pagination(data.page, data.total_pages);\n    });\n  } else {\n    const actualPage = evt.target.textContent;\n    getMovies(actualPage).then(data => {\n      render(data);\n      pagination(data.page, data.total_pages);\n    });\n  }\n}\n"],"names":["$d2a9bc40eacd6bf8$export$b5b6693b5298569f","genre_ids","result","map","id","JSON","parse","localStorage","getItem","length","splice","push","$9134abd8877f9bb7$export$9d27b867a89df126","data","poster_path","original_title","title","overview","release_date","join","substr","fetch","then","json","respond","genresList","genres","reduce","acc","name","setItem","stringify","$2shzp","parcelRequire","async","$80f6ab08f88269ab$export$de059b22708f79a1","page","request","default","get","err","Error","response","statusText","$dNTj1","$9eEKU","$0e271c871dabf025$export$b3890eb0ae9dca99","CURRENT_MOVIES","card","innerHTML","results","$5cab46f492ec25c8$export$2e52c1f6581a070b","$5cab46f492ec25c8$var$paginationBoxElem","document","querySelector","$5cab46f492ec25c8$export$22fa394f3ba39578","currPage","allPages","markupControls","$bdfcdc80b4c38739$export$8ddba6b40106a7ae","$bdfcdc80b4c38739$export$f53cf5ca8f68c5c3","style","display","$bdfcdc80b4c38739$export$3e13d68e5ea74e4f","setTimeout","$79864f66d00cda46$var$form","$79864f66d00cda46$var$inputEl","$79864f66d00cda46$var$notif","$79864f66d00cda46$export$53fce6159ea7d935","$79864f66d00cda46$export$2e52c1f6581a070b","addEventListener","e","preventDefault","value","trim","fetchMovies","visibility","window","onload","total_pages","console","log","$1aa81d6d0cd85e48$var$backdrop","$1aa81d6d0cd85e48$var$modalWindow","$1aa81d6d0cd85e48$var$getFilmMain","element","fromStoarage","movieId","Number","target","closest","find","movie","$1aa81d6d0cd85e48$var$createMovieInfo","checkWatched","checkQueue","modalMovieMarkup","vote_average","toFixed","vote_count","popularity","movieGenres","genre","$1aa81d6d0cd85e48$var$genresConvertor","$1aa81d6d0cd85e48$var$closeModal","onBackdropClick","parentElement","nodeName","hidden","removeEventListener","this","onEsc","code","onCloseBtn","$1aa81d6d0cd85e48$var$addFilm","toWatched","currentTarget","textContent","$1aa81d6d0cd85e48$var$addToWatchedOrQueue","watche","WATCHE","$1aa81d6d0cd85e48$var$removeFromWatchedOrQueue","toQueue","queue","QUEUE","local","key","btn","film","films","forEach","i","$1aa81d6d0cd85e48$var$eventListeners","closeModal1","addFilm1","modalCloseBtn","modalBtns","addToWatched","addToQueue","$1aa81d6d0cd85e48$var$checkLibrary","$1bab9c519cfa82bc$export$ef8a24d1bb623489","$1bab9c519cfa82bc$var$currPageGlobe","$1bab9c519cfa82bc$var$getMovies","resp","evt"],"version":3,"file":"index.c523799f.js.map"}