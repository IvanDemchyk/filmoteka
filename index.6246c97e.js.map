{"mappings":"oeAEO,SAASA,EAAgBC,GAC9B,MAAMC,EAASD,EAAUE,KAAIC,GACGC,KAAKC,MAAMC,aAAaC,QCJ7B,eDKIJ,KAM/B,OAJIF,EAAOO,OAAS,IAClBP,EAAOQ,OAAO,EAAGR,EAAOO,OAAS,GACjCP,EAAOS,KAAK,UAEPT,C,CEVF,SAASU,EAAgBC,GA4B9B,OA3BeA,EACZV,KACC,EAACW,YACCA,EAAWC,eACXA,EAAe,GAAEC,MACjBA,EAAM,GAAEf,UACRA,EAAU,CAAC,WAAUgB,SACrBA,EAAS,GAAEC,aACXA,EAAa,SAAQd,GACrBA,EAAG,OAEH,IAAIe,EAEFA,EADEL,EACK,mCAAqCA,EAEjC,gCAGb,MAAO,mCAAmCV,8BAC1Be,0BAA6BF,gEACfD,GAASD,6CACXf,EAAgBC,GAAWmB,KAAK,WAAWF,EAAaG,OAAO,EAAG,yCAEpF,IAGbD,KAAK,G,CD1BDE,MACL,yGACAC,MAAKV,GAAQA,EAAKW,SAGND,MAEhB,SAAwBE,GACtB,MAAMC,EAAaD,EAAQE,OAAOC,QAAO,CAACC,GAAKzB,GAAEA,EAAE0B,KAAEA,MACnDD,EAAIzB,GAAM0B,EACHD,IACN,IACHtB,aAAawB,QAdc,aAcS1B,KAAK2B,UAAUN,G,IEbrD,IAAAO,EAAAC,EAAA,SAIOC,eAAeC,EAAYC,EAAMC,GACtC,IAIE,aAHuBL,EAAAM,QAAMC,IAC3B,kGAA0DH,MAE5CxB,I,CAChB,MAAO4B,GACP,MAAM,IAAIC,MAAMC,SAASC,W,8BCPhBC,SAASC,cAAc,YACpBD,SAASC,cAAc,eACzBD,SAASC,cAAc,uBCPrCC,EAAAb,EAAA,SAGA,MAAMc,EAAWH,SAASC,cAAc,aAClCG,EAAcJ,SAASC,cAAc,iBACxBD,SAASC,cAAc,mBACzBD,SAASC,cAAc,iBAyBxC,SAASI,EAAYC,EAAGC,EAASC,GAC/B,MAAMC,EAAUC,OAAOJ,EAAEK,OAAOC,QAAQL,GAAShD,IACjD,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ6C,IAAeK,QAAQC,MAC5DC,GAASA,EAAMxD,KAAOkD,G,CAYW,SAA5BO,EAAgBD,EAAOlC,EAAYoC,EAAcC,GACxD,MAAMC,EAAmB,+FAGrBJ,EAAMxD,uFAERwD,EAAM9C,mFAGuB8C,EAAM5C,yRAO/B4C,EAAMK,aAAaC,QAAQ,uBACxBN,EAAMO,0MAKkDP,EAAMQ,WAAWF,QAC5E,8LAMAN,EAAM7C,4KAmHd,SAAyBsD,EAAa3C,GACpC,OAAO2C,EACJlE,KAAImE,GACejE,KAAKC,MAAMC,aAAaC,QAAQkB,IACjC4C,KAElBlD,KAAK,K,CApHmCmD,CACrCX,EAAM3D,UACNyB,4MAOyCkC,EAAM3C,4JAG7C6C,EAAe,eAAiB,+HAGhCC,EAAa,eAAiB,+DAEHH,EAAMxD,+CAGzC6C,EAAYuB,UAAYR,C,CAIO,MAA3BS,EAAa,CACjBC,gBAAgBvB,GAC0B,SAApCA,EAAEK,OAAOmB,cAAcC,WACzB5B,EAAS6B,QAAS,EAClB7B,EAAS8B,oBAAoB,QAASC,KAAKL,iB,EAI/CM,MAAM7B,GACW,WAAXA,EAAE8B,OAGNjC,EAAS6B,QAAS,EAClBhC,SAASiC,oBAAoB,UAAWC,KAAKC,O,EAG/CE,aACElC,EAAS6B,QAAS,C,GAKhBM,EAAU,CACdC,UAAUjC,GAC4B,mBAAhCA,EAAEkC,cAAcC,YAClBC,EACEpC,EACA,gBACAJ,EAAAyC,eACAzC,EAAA0C,OACA1C,EAAA2C,OACA,WAGFC,EAAyBxC,EAAG,gBAAiBJ,EAAA0C,OAAQ1C,EAAA2C,OAAQ,U,EAIjEE,QAAQzC,GAC8B,iBAAhCA,EAAEkC,cAAcC,YAClBC,EACEpC,EACA,gBACAJ,EAAAyC,eACAzC,EAAA8C,MACA9C,EAAA+C,MACA,SAGFH,EAAyBxC,EAAG,gBAAiBJ,EAAA8C,MAAO9C,EAAA+C,MAAO,Q,GAKjE,SAASP,EAAoBpC,EAAGC,EAASC,EAAc0C,EAAOC,EAAKC,GACjE,MAAMC,EAAOhD,EAAYC,EAAGC,EAASC,GACrC0C,EAAMpF,KAAKuF,GACX3F,aAAawB,QAAQiE,EAAK3F,KAAK2B,UAAU+D,IACzC5C,EAAEkC,cAAcC,YAAc,eAAeW,G,CAG/C,SAASN,EAAyBxC,EAAGC,EAAS2C,EAAOC,EAAKC,GACxD,MAAME,EAAQ9F,KAAKC,MAAMC,aAAaC,QAAQwF,IACxC1C,EAAUC,OAAOJ,EAAEK,OAAOC,QAAQL,GAAShD,IACjD+F,EAAMC,SAAQ,CAACF,EAAMG,KACnBH,EAAK9F,KAAOkD,GAAUyC,EAAMrF,OAAO2F,EAAG,EAAS,IAEjD9F,aAAawB,QAAQiE,EAAK3F,KAAK2B,UAAU+D,IACzC5C,EAAEkC,cAAcC,YAAc,UAAUW,G,CAI1C,SAASK,EAAeC,EAAYC,GAClC,MAAMC,EAAgB5D,SAASC,cAAc,4BACvC4D,EAAY,CAChBC,aAAc9D,SAASC,cAAc,+BACrC8D,WAAY/D,SAASC,cAAc,8BAGrC4D,EAAUC,aAAaE,iBAAiB,QAASL,EAAQpB,WACzDsB,EAAUE,WAAWC,iBAAiB,QAASL,EAAQZ,SACvDa,EAAcI,iBAAiB,QAASN,EAAWrB,YACnDlC,EAAS6D,iBAAiB,QAASN,EAAW7B,iBAC9C7B,SAASgE,iBAAiB,UAAWN,EAAWvB,M,CAYlD,SAAS8B,EAAaf,EAAOG,GAC3B,GAAqB,IAAjBH,EAAMtF,OAIV,OAAOsF,EAAMpC,MAAKC,GAASA,EAAMxD,KAAO8F,EAAK9F,I,CCnM/C2C,EAAAgE,KAAKF,iBAAiB,SDDe,SAAd1D,GACrB,MAAM+C,EAAOhD,EAAYC,EAAG,cAAeJ,EAAAyC,gBAK3C3B,EAAgBqC,EJdW,aIWNY,EAAa/D,EAAA0C,OAAQS,GACvBY,EAAa/D,EAAA8C,MAAOK,IAGvCI,EAAe7B,EAAYU,GAC3BnC,EAAS6B,QAAS,C,IEhBpB9B,EAAAb,EAAA,S,aAIO,SAAS8E,EAAOnG,GACrBN,aAAawB,QAAQgB,EAAAyC,eAAgBnF,KAAK2B,UAAUnB,IACpDkC,EAAAgE,KAAKvC,UAAY5D,EACfP,KAAKC,MAAMC,aAAaC,QAAQuC,EAAAyC,iBAAiB9B,Q,kBCN9C,IAAIuD,EACX,MAAMC,EAAoBrE,SAASC,cAAc,kBAE1C,SAASqE,EAAWC,EAAUC,GACnC,IAAIC,EAAiB,GACjBC,EAAiBH,EAAW,EAC5BI,EAAgBJ,EAAW,EAC3BK,EAAeL,EAAW,EAC1BM,EAAeN,EAAW,EAC9BH,EAAgB5G,KAAKC,MAAMC,aAAaC,QAAQ,mBAAmB6B,KAE/D+E,EAAW,IACbE,GAAkB,6BACfA,GAAe,+BAGhBF,EAAW,IACbE,GAAkB,6BAGhBF,EAAW,IACbE,GAAkB,wBAAwBC,UAGxCH,EAAW,IACbE,GAAkB,OAAOE,UAG3BF,GAAkB,sBAAsBF,SAEpCC,EAAW,EAAID,IACjBE,GAAkB,QAAQG,UAGxBJ,EAAW,EAAID,IACjBE,GAAkB,QAAQI,UAGxBL,EAAW,EAAID,IACjBE,GAAkB,6BAGhBD,EAAWD,IACbE,GAAkB,uBAAuBD,SACzCC,GAAkB,8BAGpBJ,EAAkB1C,UAAY8C,C,CChDzB,IAAIK,EAAY9E,SAASC,cAAc,cAEvC,SAAS8E,IACdD,EAAUE,MAAMC,QAAU,M,CAErB,SAASC,IACdC,YAAW,KACTL,EAAUE,MAAMC,QAAU,MAAM,GAC/B,I,CCCL,MAAMG,EAAoBpF,SAASC,cAAc,kBAEjD,IAAIoF,EAiCJ/F,eAAegG,EAAU9F,EAAO,GAE9B,IAAI+F,EACJ,OAAIC,eACFT,IACAQ,QAAa,EAAAE,EAAAC,aAAYL,EAAeG,eACxCG,OAAOC,OAASV,IAChBG,EAAgBE,EAAK/F,KACd+F,IAEPR,IACAQ,QAAahG,EAAYC,GACzBmG,OAAOC,OAASV,IAChBG,EAAgBE,EAAK/F,KACd+F,E,CA7CXM,KAAK7B,iBAAiB,UAGtB1E,eAA4BgB,GAC1BA,EAAEwF,iBACF,IAAIrG,EAAUsG,QAAQC,MAAMC,OAC5B,IAAKxG,EACH,OAEF,IACE,MAAMzB,QAAa,EAAAyH,EAAAC,aAAalG,KAAO,EAAIC,GAC3C,GAA4B,IAAxBzB,EAAK6C,QAAQjD,OAKf,OAJAsI,MAAMlB,MAAMmB,WAAa,eACzBhB,YAAW,KACTe,MAAMlB,MAAMmB,WAAa,QAAQ,GAChC,KAGLd,EAAgBrH,EAAKwB,KACrBuF,IACAZ,EAAOnG,GACP2H,OAAOC,OAASV,IAChBM,cAAgB/F,EAChB6E,EAAWtG,EAAKwB,KAAMxB,EAAKoI,Y,CAC3B,MAAOxG,GACPyG,QAAQC,IAAI,Q,KAwBhBhB,IAAY5G,MAAKV,IACf+G,IACAZ,EAAOnG,GACPqH,EAAgBrH,EAAKwB,KACrBmG,OAAOC,OAASV,IAChBZ,EAAWtG,EAAKwB,KAAMxB,EAAKoI,YAAY,IAIzChB,EAAkBpB,iBAAiB,SAEnC,SAA2BuC,GACzB,GAA4B,OAAxBA,EAAI5F,OAAOoB,SACb,OAGF,GAA+B,QAA3BwE,EAAI5F,OAAO8B,YACb,OAGF,GAA+B,OAA3B8D,EAAI5F,OAAO8B,YAEb4D,QAAQC,IAAI,UAAWjB,GACvBC,EAAWD,GAAiB,GAAI3G,MAAKV,IACnCmG,EAAOnG,GACPsG,EAAWtG,EAAKwB,KAAMxB,EAAKoI,YAAY,SAEpC,GAA+B,OAA3BG,EAAI5F,OAAO8B,YAEpB4D,QAAQC,IAAI,UAAWjB,GACvBC,EAAWD,GAAiB,GAAI3G,MAAKV,IACnCmG,EAAOnG,GACPsG,EAAWtG,EAAKwB,KAAMxB,EAAKoI,YAAY,QAEpC,CACL,MAAMI,EAAaD,EAAI5F,OAAO8B,YAE9B4D,QAAQC,IAAI,gBAAiBjB,GAC7BC,EAAUkB,GAAY9H,MAAKV,IACzBmG,EAAOnG,GACPsG,EAAWtG,EAAKwB,KAAMxB,EAAKoI,YAAY,G","sources":["src/js/genresConvertor.js","src/js/get-genres.js","src/js/createMovieCard.js","src/js/fetchTrends.js","src/js/searchRequest.js","src/js/modal-window.js","src/js/get-films.js","src/js/render.js","src/js/paginFunction.js","src/js/loader.js","src/js/pagination.js"],"sourcesContent":["// ---- Genres converting function - замінює id жанрів в картці фільму на назви жанрів\nimport { GENRES_MOVIES } from './get-genres'\nexport function genresConvertor(genre_ids) {\n  const result = genre_ids.map(id => {\n    const objectNumbersInString = JSON.parse(localStorage.getItem(GENRES_MOVIES));\n    return objectNumbersInString[id];\n  });\n  if (result.length > 2) {\n    result.splice(2, result.length - 2);\n    result.push(\"Other\")\n  }\n  return result\n}\n","export const GENRES_MOVIES = 'genresList';\nconst fetchedGenres = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=e8369cced440ebe3b010b622661df24b&language=en-US`\n  ).then(data => data.json());\n};\n\nfetchedGenres().then(onFetchSuccess);\n\nfunction onFetchSuccess(respond) {\n  const genresList = respond.genres.reduce((acc, { id, name }) => {\n    acc[id] = name;\n    return acc;\n  }, {});\n  localStorage.setItem(GENRES_MOVIES, JSON.stringify(genresList));\n}\n","import { genresConvertor } from \"./genresConvertor\";\nexport function createMovieCard(data) {\n  const markup = data\n    .map(\n      ({\n        poster_path,\n        original_title=\"\",\n        title=\"\",\n        genre_ids=[\"no info\"],\n        overview=\"\",\n        release_date=\"......\",\n        id=\"\",\n      }) => {\n        let path;\n        if (poster_path) {\n          path = 'https://image.tmdb.org/t/p/w500/' + poster_path;\n        }\n        else {path = 'https://picsum.photos/500/750';}\n        const altPath = './images/no-file-opt.jpg';\n        //  <img src=\"./images/no-file-opt.jpg\" alt=\"A brilliant.\">\n        return `<li class=\"card__item list\" id=\"${id}\">\n            <img src='${path}' loading=\"lazy\" alt=\"${overview}\" class=\"card__img\" />\n            <h2 class=\"card__title\">${title ?? original_title}</h2>\n            <p class=\"card__desc\">${genresConvertor(genre_ids).join(', ')} | ${release_date.substr(0, 4)}\n            </p>\n            </li>`;\n      }\n    )\n    .join('');\n  return markup;\n}\n","\nimport axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\n// let page = 1;\nexport async function fetchTrends(page, request) {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${KEY_API}&page=${page}`\n    );\n    return response.data;\n  } catch (err) {\n    throw new Error(response.statusText);\n  }\n}\n","// import { fetchMovies } from './fetchMovie';\n// import { render } from './render';\n// import { pagination } from './paginFunction';\n// import { loaderOn } from './loader';\n// import { loaderOff } from './loader';\nconst form = document.querySelector('.form-js');\nconst inputEl = document.querySelector('.form-input');\nconst notif = document.querySelector('.form__notification');\nexport let globalRequest;\nexport let currPageGlobe;\nlet page = 1;\n// async function inputRequest(e) {\n//   e.preventDefault();\n//    let request = inputEl.value.trim();\n//   if (!request) {\n//     return;\n//   }\n//   try {\n//     const data = await fetchMovies(page, request);\n//     // console.log('hello try');\n//     if (data.results.length === 0) {\n//       notif.style.visibility = 'visible';\n//       setTimeout(() => {\n//         notif.style.visibility = 'hidden';\n//       }, 5000);\n//       return;\n//     }\n//     currPageGlobe = data.page;\n//     loaderOn();\n//     render(data);\n//     window.onload = loaderOff();\n//     globalRequest = request;\n//     pagination(data.page, data.total_pages);\n//   } catch (err) {\n//     console.log('Error');\n//     errorMsg;\n//   }\n// }\n// const errorMsg = err => Notify.failure(`${err}`);\n// form.addEventListener('submit', inputRequest);\n","import { CURRENT_MOVIES, watche, queue, WATCHE, QUEUE } from './local.js';\nimport { GENRES_MOVIES } from './get-genres';\n\nconst backdrop = document.querySelector('.backdrop');\nconst modalWindow = document.querySelector('.modal-window');\nconst watchedBtn = document.querySelector('.watched-btn-js');\nconst queueBtn = document.querySelector('.queue-btn-js');\n// відкриття модального вікна з інфо про фільм\nfunction showMovieMain(e) {\n  const film = getFilmMain(e, '.card__item', CURRENT_MOVIES);\n\n  const checkWatched = checkLibrary(watche, film);\n  const checkQueue = checkLibrary(queue, film);\n\n  createMovieInfo(film, GENRES_MOVIES, checkWatched, checkQueue);\n  eventListeners(closeModal, addFilm);\n  backdrop.hidden = false;\n}\n\nfunction showMovieLibrary(e) {\n  const film = getFilmLibrary(e, '.card__item', watchedOrQueue());\n\n  const checkWatched = checkLibrary(watche, film);\n  const checkQueue = checkLibrary(queue, film);\n\n  createMovieInfo(film, GENRES_MOVIES, checkWatched, checkQueue);\n  eventListeners(closeModal, addFilm);\n\n  backdrop.hidden = false;\n}\n\nfunction getFilmMain(e, element, fromStoarage) {\n  const movieId = Number(e.target.closest(element).id);\n  return JSON.parse(localStorage.getItem(fromStoarage)).results.find(\n    movie => movie.id === movieId\n  );\n}\n\nfunction getFilmLibrary(e, element, fromStoarage) {\n  const movieId = Number(e.target.closest(element).id);\n  return JSON.parse(localStorage.getItem(fromStoarage)).find(\n    movie => movie.id === movieId\n  );\n}\n\n// розмітка з інфо про фільм у модальному вікні\nfunction createMovieInfo(movie, genresList, checkWatched, checkQueue) {\n  const modalMovieMarkup = `<button class=\"modal-window__close-btn\">close</button>\n\n    <div class=\"modal__movie\" id='${\n      movie.id\n    }'><img class='movie__img' alt=\"movie poster\" src=\"https://image.tmdb.org/t/p/w500/${\n    movie.poster_path\n  }\"/>\n      <div class=\"movie__info\">\n      <h2 class=\"movie__title\">${movie.title}</h2>\n      <table class=\"movie__details\">\n      <tbody>\n      <tr>\n      <td class='movie__detail modal-text--left-column modal-text'>Vote/Votes</td>\n      <td class=\"movie__detail modal-text modal-text--line-high\">\n      <span class=\"movie__detail--accent\">\n      ${movie.vote_average.toFixed(1)} </span\n      >/ ${movie.vote_count}\n      </td>\n      </tr>\n      <tr>\n      <td class=\"movie__detail modal-text--left-column modal-text\">Popularity</td>\n      <td class=\"movie__detail modal-text modal-text--line-high\">${movie.popularity.toFixed(\n        1\n      )}</td>\n      </tr>\n      <tr>\n      <td class=\"movie__detail modal-text--left-column modal-text\">Original title</td>\n      <td class=\"movie__detail modal-text modal-text--uppercase\">${\n        movie.original_title\n      }</td>\n      </tr>\n      <tr>\n      <td class=\"movie__detail modal-text--left-column modal-text\">Genres</td>\n      <td class=\"movie__detail modal-text\">${genresConvertor(\n        movie.genre_ids,\n        genresList\n      )}</td>\n      </tr>\n          </tbody>\n          </table>\n          \n          <h3 class=\"movie__about modal-text modal-text--uppercase\">About</h3>\n      <p class=\"movie__description modal-text\">${movie.overview}</p>\n      <div class=\"movie__add-buttons\">\n        <button class=\"movie__add-btn modal-text modal-text--uppercase js-movie__add-btn--watched\">${\n          checkWatched ? 'remove from ' : 'add to '\n        }watched</button>\n        <button class=\"movie__add-btn modal-text modal-text--uppercase js-movie__add-btn--queue\">${\n          checkQueue ? 'remove from ' : 'add to '\n        }queue</button>\n      </div><button data-movie-id='${movie.id}'>Trailer</button>\n      </div></div>\n  `;\n  modalWindow.innerHTML = modalMovieMarkup;\n}\n\n// функції для закриття модального вікна\nconst closeModal = {\n  onBackdropClick(e) {\n    if (e.target.parentElement.nodeName === 'BODY') {\n      backdrop.hidden = true;\n      backdrop.removeEventListener('click', this.onBackdropClick);\n    }\n  },\n\n  onEsc(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n    backdrop.hidden = true;\n    document.removeEventListener('keydown', this.onEsc);\n  },\n\n  onCloseBtn() {\n    backdrop.hidden = true;\n  },\n};\n\n// функції додавання фільмів у список переглянутих та у чергу\nconst addFilm = {\n  toWatched(e) {\n    if (e.currentTarget.textContent === 'add to watched') {\n      addToWatchedOrQueue(\n        e,\n        '.modal__movie',\n        CURRENT_MOVIES,\n        watche,\n        WATCHE,\n        'watched'\n      );\n    } else {\n      removeFromWatchedOrQueue(e, '.modal__movie', watche, WATCHE, 'watched');\n    }\n  },\n\n  toQueue(e) {\n    if (e.currentTarget.textContent === 'add to queue') {\n      addToWatchedOrQueue(\n        e,\n        '.modal__movie',\n        CURRENT_MOVIES,\n        queue,\n        QUEUE,\n        'queue'\n      );\n    } else {\n      removeFromWatchedOrQueue(e, '.modal__movie', queue, QUEUE, 'queue');\n    }\n  },\n};\n\nfunction addToWatchedOrQueue(e, element, fromStoarage, local, key, btn) {\n  const film = getFilmMain(e, element, fromStoarage);\n  local.push(film);\n  localStorage.setItem(key, JSON.stringify(local));\n  e.currentTarget.textContent = `remove from ${btn}`;\n}\n\nfunction removeFromWatchedOrQueue(e, element, local, key, btn) {\n  const films = JSON.parse(localStorage.getItem(key));\n  const movieId = Number(e.target.closest(element).id);\n  films.forEach((film, i) => {\n    film.id === movieId ? local.splice(i, 1) : film;\n  });\n  localStorage.setItem(key, JSON.stringify(local));\n  e.currentTarget.textContent = `add to ${btn}`;\n}\n\n// додає та видаляє слухачі подій\nfunction eventListeners(closeModal, addFilm) {\n  const modalCloseBtn = document.querySelector('.modal-window__close-btn');\n  const modalBtns = {\n    addToWatched: document.querySelector('.js-movie__add-btn--watched'),\n    addToQueue: document.querySelector('.js-movie__add-btn--queue'),\n  };\n\n  modalBtns.addToWatched.addEventListener('click', addFilm.toWatched);\n  modalBtns.addToQueue.addEventListener('click', addFilm.toQueue);\n  modalCloseBtn.addEventListener('click', closeModal.onCloseBtn);\n  backdrop.addEventListener('click', closeModal.onBackdropClick);\n  document.addEventListener('keydown', closeModal.onEsc);\n}\n\nfunction genresConvertor(movieGenres, genresList) {\n  return movieGenres\n    .map(genre => {\n      const allGenres = JSON.parse(localStorage.getItem(genresList));\n      return allGenres[genre];\n    })\n    .join(', ');\n}\n\nfunction checkLibrary(local, film) {\n  if (local.length === 0) {\n    return;\n  }\n\n  return local.find(movie => movie.id === film.id);\n}\n\nfunction watchedOrQueue() {\n  if (watchedBtn.classList.contains('active')) {\n    return WATCHE;\n  } else {\n    return QUEUE;\n  }\n}\nexport { showMovieMain, showMovieLibrary };\n","// console.log('get-films');\nimport { createMovieCard } from './createMovieCard.js';\nimport { getfetchTrends } from './fetchTrends.js';\nimport { CURRENT_MOVIES, WATCHE, QUEUE, watche, queue } from './local.js';\nimport { card } from './local';\nimport { globalRequest } from './searchRequest';\nimport { showMovieMain } from './modal-window.js';\n//Додаю сюди для перевірки функціоналу, поки без підключення\n//Модальне вікно\ncard.addEventListener('click', showMovieMain);\n","import { card } from './local';\nimport { createMovieCard } from './createMovieCard';\nimport { CURRENT_MOVIES, WATCHE, QUEUE, watche, queue } from './local';\n\nexport function render(data) {\n  localStorage.setItem(CURRENT_MOVIES, JSON.stringify(data));\n  card.innerHTML = createMovieCard(\n    JSON.parse(localStorage.getItem(CURRENT_MOVIES)).results\n  );\n}\n","\nexport let currPageGlobe;\nconst paginationBoxElem = document.querySelector('.js-pagination');\n\nexport function pagination(currPage, allPages) {\n  let markupControls = '';\n  let beforeTwoPages = currPage - 2;\n  let beforeOnePage = currPage - 1;\n  let afterOnePage = currPage + 1;\n  let afterTwoPage = currPage + 2;\n  currPageGlobe = JSON.parse(localStorage.getItem('current_movies')).page;\n\n  if (currPage > 1) {\n    markupControls += `<li class='arrows'>🡸</li>`;\n    markupControls += `<li class='firstInt'>1</li>`;\n  }\n\n  if (currPage > 4) {\n    markupControls += `<li class='dots'>...</li>`;\n  }\n\n  if (currPage > 3) {\n    markupControls += `<li class='two-left'>${beforeTwoPages}</li>`;\n  }\n\n  if (currPage > 2) {\n    markupControls += `<li>${beforeOnePage}</li>`;\n  }\n\n  markupControls += `<li class='active'>${currPage}</li>`;\n\n  if (allPages - 1 > currPage) {\n    markupControls += `<li >${afterOnePage}</li>`;\n  }\n\n  if (allPages - 2 > currPage) {\n    markupControls += `<li >${afterTwoPage}</li>`;\n  }\n\n  if (allPages - 3 > currPage) {\n    markupControls += `<li class='dots'>...</li>`;\n  }\n\n  if (allPages > currPage) {\n    markupControls += `<li class='lastInt'>${allPages}</li>`;\n    markupControls += `<li class='arrows'>🡺</li>`;\n  }\n\n  paginationBoxElem.innerHTML = markupControls;\n}","export let preloader = document.querySelector('.preloader');\n\nexport function loaderOn() {\n  preloader.style.display = 'flex';\n}\nexport function loaderOff() {\n  setTimeout(() => {\n    preloader.style.display = 'none';\n  }, 500);\n}\n","// const API_KEY = '0b11624b950ea9c4284f61844023b09c';\n// const BASE_URL = 'https://api.themoviedb.org/3/trending';\n// const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nimport { render } from './render.js';\nimport { fetchMovies } from './fetchMovie';\nimport { fetchTrends } from './fetchTrends.js';\nimport { pagination } from './paginFunction.js';\nimport { loaderOn } from './loader';\nimport { loaderOff } from './loader';\nconst paginationBoxElem = document.querySelector('.js-pagination');\n// let page = 1;\nlet currPageGlobe;\nconst errorMsg = err => Notify.failure(`${err}`);\nform.addEventListener('submit', inputRequest);\n\n// search function\nasync function inputRequest(e) {\n  e.preventDefault();\n  let request = inputEl.value.trim();\n  if (!request) {\n    return;\n  }\n  try {\n    const data = await fetchMovies((page = 1), request);\n    if (data.results.length === 0) {\n      notif.style.visibility = 'visible';\n      setTimeout(() => {\n        notif.style.visibility = 'hidden';\n      }, 5000);\n      return;\n    }\n    currPageGlobe = data.page;\n    loaderOn();\n    render(data);\n    window.onload = loaderOff();\n    globalRequest = request;\n    pagination(data.page, data.total_pages);\n  } catch (err) {\n    console.log('Error');\n    errorMsg;\n  }\n}\n\n\nasync function getMovies(page = 1) {\n  // console.log(globalRequest);\n  let resp;\n  if (globalRequest) {\n    loaderOn();\n    resp = await fetchMovies(currPageGlobe, globalRequest);\n    window.onload = loaderOff();\n    currPageGlobe = resp.page;\n    return resp;\n  } else {\n    loaderOn();\n    resp = await fetchTrends(page);\n    window.onload = loaderOff();\n    currPageGlobe = resp.page;\n    return resp;\n  }\n}\n\ngetMovies().then(data => {\n  loaderOn();\n  render(data);\n  currPageGlobe = data.page;\n  window.onload = loaderOff();\n  pagination(data.page, data.total_pages);\n});\n\n\npaginationBoxElem.addEventListener('click', paginationHandler);\n\nfunction paginationHandler(evt) {\n  if (evt.target.nodeName !== 'LI') {\n    return;\n  }\n\n  if (evt.target.textContent === '...') {\n    return;\n  }\n\n  if (evt.target.textContent === '🡸') {\n    // currPageGlobe = JSON.parse(localStorage.getItem('current_movies')).page;\n    console.log('Arrov<-', currPageGlobe);\n    getMovies((currPageGlobe -= 1)).then(data => {\n      render(data);\n      pagination(data.page, data.total_pages);\n    });\n  } else if (evt.target.textContent === '🡺') {\n    // currPageGlobe = JSON.parse(localStorage.getItem(\"current_movies\")).page;\n    console.log('Arrov>-', currPageGlobe);\n    getMovies((currPageGlobe += 1)).then(data => {\n      render(data);\n      pagination(data.page, data.total_pages);\n    });\n  } else {\n    const actualPage = evt.target.textContent;\n    // currPageGlobe = actualPage;\n    console.log('in current - ', currPageGlobe);\n    getMovies(actualPage).then(data => {\n      render(data);\n      pagination(data.page, data.total_pages);\n    });\n  }\n}\n"],"names":["$d2a9bc40eacd6bf8$export$b5b6693b5298569f","genre_ids","result","map","id","JSON","parse","localStorage","getItem","length","splice","push","$9134abd8877f9bb7$export$9d27b867a89df126","data","poster_path","original_title","title","overview","release_date","path","join","substr","fetch","then","json","respond","genresList","genres","reduce","acc","name","setItem","stringify","$2shzp","parcelRequire","async","$80f6ab08f88269ab$export$de059b22708f79a1","page","request","default","get","err","Error","response","statusText","document","querySelector","$9eEKU","$1aa81d6d0cd85e48$var$backdrop","$1aa81d6d0cd85e48$var$modalWindow","$1aa81d6d0cd85e48$var$getFilmMain","e","element","fromStoarage","movieId","Number","target","closest","results","find","movie","$1aa81d6d0cd85e48$var$createMovieInfo","checkWatched","checkQueue","modalMovieMarkup","vote_average","toFixed","vote_count","popularity","movieGenres","genre","$1aa81d6d0cd85e48$var$genresConvertor","innerHTML","$1aa81d6d0cd85e48$var$closeModal","onBackdropClick","parentElement","nodeName","hidden","removeEventListener","this","onEsc","code","onCloseBtn","$1aa81d6d0cd85e48$var$addFilm","toWatched","currentTarget","textContent","$1aa81d6d0cd85e48$var$addToWatchedOrQueue","CURRENT_MOVIES","watche","WATCHE","$1aa81d6d0cd85e48$var$removeFromWatchedOrQueue","toQueue","queue","QUEUE","local","key","btn","film","films","forEach","i","$1aa81d6d0cd85e48$var$eventListeners","closeModal1","addFilm1","modalCloseBtn","modalBtns","addToWatched","addToQueue","addEventListener","$1aa81d6d0cd85e48$var$checkLibrary","card","$0e271c871dabf025$export$b3890eb0ae9dca99","$5cab46f492ec25c8$export$2e52c1f6581a070b","$5cab46f492ec25c8$var$paginationBoxElem","$5cab46f492ec25c8$export$22fa394f3ba39578","currPage","allPages","markupControls","beforeTwoPages","beforeOnePage","afterOnePage","afterTwoPage","$bdfcdc80b4c38739$export$8ddba6b40106a7ae","$bdfcdc80b4c38739$export$f53cf5ca8f68c5c3","style","display","$bdfcdc80b4c38739$export$3e13d68e5ea74e4f","setTimeout","$1bab9c519cfa82bc$var$paginationBoxElem","$1bab9c519cfa82bc$var$currPageGlobe","$1bab9c519cfa82bc$var$getMovies","resp","globalRequest","$dNTj1","fetchMovies","window","onload","form","preventDefault","inputEl","value","trim","notif","visibility","total_pages","console","log","evt","actualPage"],"version":3,"file":"index.6246c97e.js.map"}